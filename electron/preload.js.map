{
  "version": 3,
  "sources": ["preload.ts"],
  "sourcesContent": ["import { contextBridge, ipcRenderer } from 'electron'\r\nimport path from 'path'\r\nimport fs from 'fs'\r\n\r\nlet sharp: any = null\r\nlet nativeMod: any = null\r\n\r\nfunction loadNative(): any {\r\n  if (nativeMod) return nativeMod\r\n  try {\r\n    try {\r\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n      const ngb = require('node-gyp-build')\r\n      nativeMod = ngb(path.join(__dirname, '..', 'native'))\r\n      if (nativeMod) return nativeMod\r\n    } catch {}\r\n    const candidate = path.join(process.cwd(), 'native', 'build', 'Release', 'photounikalizer_native.node')\r\n    if (fs.existsSync(candidate)) {\r\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n      nativeMod = require(candidate)\r\n      return nativeMod\r\n    }\r\n  } catch {}\r\n  try {\r\n    const asarUnpacked = path.join(process.resourcesPath || '', 'app.asar.unpacked', 'native', 'build', 'Release', 'photounikalizer_native.node')\r\n    if (asarUnpacked && fs.existsSync(asarUnpacked)) {\r\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n      nativeMod = require(asarUnpacked)\r\n      return nativeMod\r\n    }\r\n  } catch {}\r\n  try {\r\n    const platArch = `${process.platform}-${process.arch}`\r\n    const prebuildA = path.join(__dirname, '..', 'native', 'prebuilds', platArch, 'node.napi.node')\r\n    if (fs.existsSync(prebuildA)) {\r\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n      nativeMod = require(prebuildA)\r\n      return nativeMod\r\n    }\r\n    const prebuildB = path.join(__dirname, '..', 'native', 'prebuilds', platArch, 'photounikalizer-native.node')\r\n    if (fs.existsSync(prebuildB)) {\r\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n      nativeMod = require(prebuildB)\r\n      return nativeMod\r\n    }\r\n  } catch {}\r\n  try {\r\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n    nativeMod = require('photounikalizer_native')\r\n  } catch {\r\n    nativeMod = null\r\n  }\r\n  return nativeMod\r\n}\r\n\r\nasync function decodeGray8(filePath: string) {\r\n  if (!sharp) {\r\n    try { sharp = require('sharp') } catch { sharp = null }\r\n  }\r\n  if (!sharp) return null\r\n  const res = await sharp(filePath).grayscale().raw().toBuffer({ resolveWithObject: true })\r\n  const buf = new Uint8Array(res.data.buffer, res.data.byteOffset, res.data.byteLength)\r\n  const width = res.info.width as number\r\n  const height = res.info.height as number\r\n  const stride = res.info.width * res.info.channels\r\n  return { buf, width, height, stride }\r\n}\r\n\r\nasync function decodeRgba(filePath: string) {\r\n  if (!sharp) {\r\n    try { sharp = require('sharp') } catch { sharp = null }\r\n  }\r\n  if (!sharp) return null\r\n  const res = await sharp(filePath).ensureAlpha().raw().toBuffer({ resolveWithObject: true })\r\n  const buf = new Uint8Array(res.data.buffer, res.data.byteOffset, res.data.byteLength)\r\n  const width = res.info.width as number\r\n  const height = res.info.height as number\r\n  const stride = res.info.width * res.info.channels\r\n  return { buf, width, height, stride }\r\n}\r\n\r\ncontextBridge.exposeInMainWorld('api', {\r\n  selectImages: () => ipcRenderer.invoke('select-images'),\r\n  selectImageDir: () => ipcRenderer.invoke('select-image-dir'),\r\n  selectOutputDir: () => ipcRenderer.invoke('select-output-dir'),\r\n  processImages: (payload: unknown) => ipcRenderer.invoke('process-images', payload),\r\n  selectTextFile: () => ipcRenderer.invoke('select-text-file'),\r\n  readTextFileByPath: (p: string) => ipcRenderer.invoke('read-text-file-by-path', p),\r\n  saveJson: (payload: unknown) => ipcRenderer.invoke('save-json', payload),\r\n  saveJsonBatch: (payload: unknown) => ipcRenderer.invoke('save-json-batch', payload),\r\n  savePreset: (payload: unknown) => ipcRenderer.invoke('save-preset', payload),\r\n  loadPreset: () => ipcRenderer.invoke('load-preset'),\r\n  cancel: () => ipcRenderer.invoke('cancel-process'),\r\n  expandPaths: (paths: string[]) => ipcRenderer.invoke('expand-paths', paths),\r\n  openPath: (p: string) => ipcRenderer.invoke('open-path', p),\r\n  showInFolder: (p: string) => ipcRenderer.invoke('show-item-in-folder', p),\r\n  renameFile: (path: string, newName: string) => ipcRenderer.invoke('file-rename', { path, newName }),\r\n  deleteFile: (path: string) => ipcRenderer.invoke('file-delete', path),\r\n  fileStats: (path: string) => ipcRenderer.invoke('file-stats', path),\r\n  metaBeforeAfter: (src: string, out: string) => ipcRenderer.invoke('meta-before-after', { src, out }),\r\n  onProgress: (cb: (data: unknown) => void) => {\r\n    const listener = (_: unknown, data: unknown) => cb(data)\r\n    ipcRenderer.on('process-progress', listener as any)\r\n    return () => ipcRenderer.removeListener('process-progress', listener as any)\r\n  },\r\n  onComplete: (cb: () => void) => {\r\n    const listener = () => cb()\r\n    ipcRenderer.on('process-complete', listener as any)\r\n    return () => ipcRenderer.removeListener('process-complete', listener as any)\r\n  },\r\n  onOsOpenFiles: (cb: (files: string[]) => void) => {\r\n    const listener = (_: unknown, files: string[]) => cb(files)\r\n    ipcRenderer.on('os-open-files', listener as any)\r\n    return () => ipcRenderer.removeListener('os-open-files', listener as any)\r\n  },\r\n  checkForUpdates: () => ipcRenderer.invoke('check-for-updates'),\r\n  downloadUpdate: () => ipcRenderer.invoke('download-update'),\r\n  quitAndInstall: () => ipcRenderer.invoke('quit-and-install'),\r\n  onUpdateAvailable: (cb: (info: unknown) => void) => {\r\n    const listener = (_: unknown, info: unknown) => cb(info)\r\n    ipcRenderer.on('update-available', listener as any)\r\n    return () => ipcRenderer.removeListener('update-available', listener as any)\r\n  },\r\n  onUpdateNotAvailable: (cb: (info: unknown) => void) => {\r\n    const listener = (_: unknown, info: unknown) => cb(info)\r\n    ipcRenderer.on('update-not-available', listener as any)\r\n    return () => ipcRenderer.removeListener('update-not-available', listener as any)\r\n  },\r\n  onUpdateError: (cb: (err: string) => void) => {\r\n    const listener = (_: unknown, err: string) => cb(err)\r\n    ipcRenderer.on('update-error', listener as any)\r\n    return () => ipcRenderer.removeListener('update-error', listener as any)\r\n  },\r\n  onUpdateProgress: (cb: (p: { percent?: number }) => void) => {\r\n    const listener = (_: unknown, p: { percent?: number }) => cb(p)\r\n    ipcRenderer.on('update-download-progress', listener as any)\r\n    return () => ipcRenderer.removeListener('update-download-progress', listener as any)\r\n  },\r\n  onUpdateDownloaded: (cb: (info: unknown) => void) => {\r\n    const listener = (_: unknown, info: unknown) => cb(info)\r\n    ipcRenderer.on('update-downloaded', listener as any)\r\n    return () => ipcRenderer.removeListener('update-downloaded', listener as any)\r\n  },\r\n  onWhatsNew: (cb: (payload: unknown) => void) => {\r\n    const listener = (_: unknown, payload: unknown) => cb(payload)\r\n    ipcRenderer.on('show-whats-new', listener as any)\r\n    return () => ipcRenderer.removeListener('show-whats-new', listener as any)\r\n  },\r\n  win: {\r\n    minimize: () => ipcRenderer.invoke('win-minimize'),\r\n    maximize: () => ipcRenderer.invoke('win-maximize'),\r\n    toggleMaximize: () => ipcRenderer.invoke('win-toggle-maximize'),\r\n    close: () => ipcRenderer.invoke('win-close'),\r\n    isMaximized: () => ipcRenderer.invoke('win-is-maximized'),\r\n    onMaximizeState: (cb: (v: { maximized: boolean }) => void) => {\r\n      const listener = (_: unknown, v: { maximized: boolean }) => cb(v)\r\n      ipcRenderer.on('win-maximize-state', listener as any)\r\n      return () => ipcRenderer.removeListener('win-maximize-state', listener as any)\r\n    }\r\n  },\r\n  onStep: (cb: (s: unknown) => void) => {\r\n    const listener = (_: unknown, s: unknown) => cb(s)\r\n    ipcRenderer.on('process-step', listener as any)\r\n    return () => ipcRenderer.removeListener('process-step', listener as any)\r\n  },\r\n  getUpdateChangelog: () => ipcRenderer.invoke('get-update-changelog'),\r\n  getFullChangelog: () => ipcRenderer.invoke('get-full-changelog'),\r\n  getReadme: () => ipcRenderer.invoke('get-readme'),\r\n  clearStatsCache: () => ipcRenderer.invoke('stats-cache-clear'),\r\n  relaunchAsAdmin: () => ipcRenderer.invoke('relaunch-admin'),\r\n  isAdmin: () => ipcRenderer.invoke('is-admin'),\r\n  decodeGray8File: (p: string) => decodeGray8(p).then(dec => dec ? ({ width: dec.width, height: dec.height, stride: dec.stride, data: Array.from(dec.buf) }) : null),\r\n  decodeRgbaFile: (p: string) => decodeRgba(p).then(dec => dec ? ({ width: dec.width, height: dec.height, stride: dec.stride, data: Array.from(dec.buf) }) : null),\r\n  wasmCodecs: {\r\n    ensure: (items: unknown[]) => ipcRenderer.invoke('ensure-wasm-codecs', { items }),\r\n    load: (name: string) => ipcRenderer.invoke('load-wasm-file', name)\r\n  },\r\n  saveBytes: (payload: { data: number[]; defaultPath?: string }) => ipcRenderer.invoke('save-bytes', payload),\r\n  ui: {\r\n    saveState: (data: unknown) => ipcRenderer.invoke('ui-state-save', data),\r\n    loadState: () => ipcRenderer.invoke('ui-state-load')\r\n  },\r\n  auth: {\r\n    isRequired: () => ipcRenderer.invoke('auth-required'),\r\n    login: (password: string, remember: boolean) => ipcRenderer.invoke('auth-login', { password, remember }),\r\n    logout: () => ipcRenderer.invoke('auth-logout'),\r\n  },\r\n  dev: {\r\n    onToggleAdminPanel: (cb: () => void) => { const listener = () => cb(); ipcRenderer.on('dev-admin-toggle', listener as any); return () => ipcRenderer.removeListener('dev-admin-toggle', listener as any) },\r\n    onShowAdminPanel: (cb: () => void) => { const listener = () => cb(); ipcRenderer.on('dev-admin-show', listener as any); return () => ipcRenderer.removeListener('dev-admin-show', listener as any) },\r\n    onHideAdminPanel: (cb: () => void) => { const listener = () => cb(); ipcRenderer.on('dev-admin-hide', listener as any); return () => ipcRenderer.removeListener('dev-admin-hide', listener as any) },\r\n    onRequestUnlock: (cb: () => void) => { const listener = () => cb(); ipcRenderer.on('dev-admin-request-unlock', listener as any); return () => ipcRenderer.removeListener('dev-admin-request-unlock', listener as any) },\r\n    onUnlocked: (cb: () => void) => { const listener = () => cb(); ipcRenderer.on('dev-admin-unlocked', listener as any); return () => ipcRenderer.removeListener('dev-admin-unlocked', listener as any) },\r\n    toggleAdminPanel: () => ipcRenderer.invoke('dev-toggle-admin'),\r\n    showAdminPanel: () => ipcRenderer.invoke('dev-show-admin'),\r\n    hideAdminPanel: () => ipcRenderer.invoke('dev-hide-admin'),\r\n    unlock: (password: string) => ipcRenderer.invoke('dev-unlock', password),\r\n    isUnlocked: () => ipcRenderer.invoke('dev-is-unlocked'),\r\n    lock: () => ipcRenderer.invoke('dev-lock')\r\n  },\r\n  admin: {\r\n    getPassword: () => ipcRenderer.invoke('get-admin-password')\r\n  },\r\n  checkTokenVision: (payload: { endpoint?: string; token: string }) => ipcRenderer.invoke('check-token-vision', payload),\r\n  native: {\r\n    parseTxtProfiles: (text: string) => { const mod = loadNative(); return mod ? mod.parseTxtProfiles(String(text||'')) : null },\r\n    computeFileHash: async (p: string) => { const mod = loadNative(); if (!mod) return null; const res = mod.computeFileHash(p); return typeof res === 'bigint' ? res.toString() : res },\r\n    hammingDistance: (a: string | number, b: string | number) => { const mod = loadNative(); if (!mod) return null; return mod.hammingDistance(a, b) },\r\n    scanDirectory: (dir: string, recursive = true) => { const mod = loadNative(); if (!mod) return []; return mod.scanDirectory(dir, !!recursive) },\r\n    scanDirectoryFiltered: (dir: string, recursive = true, excludes: string[] = []) => { const mod = loadNative(); if (!mod) return []; return mod.scanDirectoryFiltered(dir, !!recursive, Array.isArray(excludes) ? excludes : []) },\r\n    aHashFromGray8: (buf: Uint8Array, w: number, h: number, stride: number) => { const mod = loadNative(); if (!mod) return null; const res = mod.aHashFromGray8(new Uint8Array((buf as any).buffer, (buf as any).byteOffset, (buf as any).byteLength), w, h, stride); return typeof res === 'bigint' ? res.toString() : res },\r\n    dHashFromGray8: (buf: Uint8Array, w: number, h: number, stride: number) => { const mod = loadNative(); if (!mod) return null; const res = mod.dHashFromGray8(new Uint8Array((buf as any).buffer, (buf as any).byteOffset, (buf as any).byteLength), w, h, stride); return typeof res === 'bigint' ? res.toString() : res },\r\n    pHashFromGray8: (buf: Uint8Array, w: number, h: number, stride: number) => { const mod = loadNative(); if (!mod) return null; const res = mod.pHashFromGray8(new Uint8Array((buf as any).buffer, (buf as any).byteOffset, (buf as any).byteLength), w, h, stride); return typeof res === 'bigint' ? res.toString() : res },\r\n    topKHamming: (hashes: Array<string | number>, query: string | number, k: number) => { const mod = loadNative(); if (!mod) return []; return mod.topKHamming(hashes, query, k) },\r\n    fileAHash: async (filePath: string) => { const mod = loadNative(); if (!mod) return null; try { const dec = mod.wicDecodeGray8 ? mod.wicDecodeGray8(filePath) : null; if (dec && dec.buffer && typeof dec.width === 'number' && typeof dec.height === 'number' && typeof dec.stride === 'number') { const u8 = new Uint8Array(dec.buffer.buffer, dec.buffer.byteOffset, dec.buffer.byteLength); const res = mod.aHashFromGray8(u8, dec.width, dec.height, dec.stride); return typeof res === 'bigint' ? res.toString() : res } } catch {} const dec = await decodeGray8(filePath); if (!dec) return null; const res = mod.aHashFromGray8(dec.buf, dec.width, dec.height, dec.stride); return typeof res === 'bigint' ? res.toString() : res },\r\n    fileDHash: async (filePath: string) => { const mod = loadNative(); if (!mod) return null; try { const dec = mod.wicDecodeGray8 ? mod.wicDecodeGray8(filePath) : null; if (dec && dec.buffer && typeof dec.width === 'number' && typeof dec.height === 'number' && typeof dec.stride === 'number') { const u8 = new Uint8Array(dec.buffer.buffer, dec.buffer.byteOffset, dec.buffer.byteLength); const res = mod.dHashFromGray8(u8, dec.width, dec.height, dec.stride); return typeof res === 'bigint' ? res.toString() : res } } catch {} const dec = await decodeGray8(filePath); if (!dec) return null; const res = mod.dHashFromGray8(dec.buf, dec.width, dec.height, dec.stride); return typeof res === 'bigint' ? res.toString() : res },\r\n    filePHash: async (filePath: string) => { const mod = loadNative(); if (!mod) return null; try { const dec = mod.wicDecodeGray8 ? mod.wicDecodeGray8(filePath) : null; if (dec && dec.buffer && typeof dec.width === 'number' && typeof dec.height === 'number' && typeof dec.stride === 'number') { const u8 = new Uint8Array(dec.buffer.buffer, dec.buffer.byteOffset, dec.buffer.byteLength); const res = mod.pHashFromGray8(u8, dec.width, dec.height, dec.stride); return typeof res === 'bigint' ? res.toString() : res } } catch {} const dec = await decodeGray8(filePath); if (!dec) return null; const res = mod.pHashFromGray8(dec.buf, dec.width, dec.height, dec.stride); return typeof res === 'bigint' ? res.toString() : res },\r\n    gpu: {\r\n      init: () => { const mod = loadNative(); if (mod) mod.gpuInit() },\r\n      shutdown: () => { const mod = loadNative(); if (mod) mod.gpuShutdown() },\r\n      setEnabled: (v: boolean) => { const mod = loadNative(); if (mod) mod.gpuSetEnabled(!!v) },\r\n      isEnabled: () => { const mod = loadNative(); return mod ? !!mod.gpuIsEnabled() : false },\r\n      isSupported: () => { const mod = loadNative(); return mod ? !!mod.gpuSupported() : false },\r\n      adapterName: () => { const mod = loadNative(); return mod && mod.gpuAdapterName ? String(mod.gpuAdapterName()) : '' }\r\n    },\r\n    writeMetadata: (p: string, meta: unknown) => { const mod = loadNative(); return mod ? !!mod.writeMetadata(p, meta) : false },\r\n    stripMetadata: (p: string) => { const mod = loadNative(); return mod ? !!mod.stripMetadata(p) : false },\r\n    createHammingIndex: (hashes: Array<string | number>) => { const mod = loadNative(); return mod ? mod.createHammingIndex(hashes) : -1 },\r\n    queryHammingIndex: (id: number, query: string | number, k: number, maxDistance: number) => { const mod = loadNative(); return mod ? mod.queryHammingIndex(id, query, k, maxDistance) : [] },\r\n    freeHammingIndex: (id: number) => { const mod = loadNative(); if (mod) mod.freeHammingIndex(id) },\r\n    clusterByHamming: (hashes: Array<string | number>, threshold: number) => { const mod = loadNative(); return mod ? mod.clusterByHamming(hashes, threshold) : [] },\r\n    wicDecodeGray8: (filePath: string) => { const mod = loadNative(); return mod ? mod.wicDecodeGray8(filePath) : null },\r\n    parseTxtProfilesFromFile: (filePath: string) => { const mod = loadNative(); return mod ? mod.parseTxtProfilesFromFile(filePath) : null }\r\n  },\r\n  hashAHashBatch: (paths: string[]) => ipcRenderer.invoke('native-ahash-batch', { paths }),\r\n  hashFileIncremental: (p: string) => ipcRenderer.invoke('hash-file-incremental', { path: p })\r\n})\r\n\r\n\r\n"],
  "mappings": "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",
  "names": ["path", "fs", "dec", "res"]
}
